/* Generated By:JavaCC: Do not edit this line. MapCSSParserConstants.java */
package org.openstreetmap.josm.gui.mappaint.mapcss.parser;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MapCSSParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IDENT = 1;
  /** RegularExpression Id. */
  int UINT = 2;
  /** RegularExpression Id. */
  int UFLOAT = 3;
  /** RegularExpression Id. */
  int STRING = 4;
  /** RegularExpression Id. */
  int REGEX_CHAR_WITHOUT_STAR = 5;
  /** RegularExpression Id. */
  int REGEX = 6;
  /** RegularExpression Id. */
  int H = 7;
  /** RegularExpression Id. */
  int HEXCOLOR = 8;
  /** RegularExpression Id. */
  int S = 9;
  /** RegularExpression Id. */
  int STAR = 10;
  /** RegularExpression Id. */
  int SLASH = 11;
  /** RegularExpression Id. */
  int LBRACE = 12;
  /** RegularExpression Id. */
  int RBRACE = 13;
  /** RegularExpression Id. */
  int LSQUARE = 14;
  /** RegularExpression Id. */
  int RSQUARE = 15;
  /** RegularExpression Id. */
  int LPAR = 16;
  /** RegularExpression Id. */
  int RPAR = 17;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 18;
  /** RegularExpression Id. */
  int LESS_EQUAL = 19;
  /** RegularExpression Id. */
  int GREATER = 20;
  /** RegularExpression Id. */
  int LESS = 21;
  /** RegularExpression Id. */
  int EQUAL = 22;
  /** RegularExpression Id. */
  int EXCLAMATION = 23;
  /** RegularExpression Id. */
  int TILDE = 24;
  /** RegularExpression Id. */
  int COLON = 25;
  /** RegularExpression Id. */
  int DCOLON = 26;
  /** RegularExpression Id. */
  int SEMICOLON = 27;
  /** RegularExpression Id. */
  int COMMA = 28;
  /** RegularExpression Id. */
  int PIPE = 29;
  /** RegularExpression Id. */
  int PIPE_Z = 30;
  /** RegularExpression Id. */
  int PLUS = 31;
  /** RegularExpression Id. */
  int MINUS = 32;
  /** RegularExpression Id. */
  int AMPERSAND = 33;
  /** RegularExpression Id. */
  int QUESTION = 34;
  /** RegularExpression Id. */
  int DOLLAR = 35;
  /** RegularExpression Id. */
  int CARET = 36;
  /** RegularExpression Id. */
  int COMMENT_START = 37;
  /** RegularExpression Id. */
  int UNEXPECTED_CHAR = 38;
  /** RegularExpression Id. */
  int COMMENT_END = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<IDENT>",
    "<UINT>",
    "<UFLOAT>",
    "<STRING>",
    "<REGEX_CHAR_WITHOUT_STAR>",
    "<REGEX>",
    "<H>",
    "<HEXCOLOR>",
    "<S>",
    "\"*\"",
    "\"/\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\"!\"",
    "\"~\"",
    "\":\"",
    "\"::\"",
    "\";\"",
    "\",\"",
    "\"|\"",
    "\"|z\"",
    "\"+\"",
    "\"-\"",
    "\"&\"",
    "\"?\"",
    "\"$\"",
    "\"^\"",
    "\"/*\"",
    "<UNEXPECTED_CHAR>",
    "\"*/\"",
    "<token of kind 40>",
  };

}
