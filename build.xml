<!--
** build.xml - main ant file for JOSM
**
** To build run
**    ant clean
**    ant dist
** This will create 'josm-custom.jar'  in directory 'dist'. See also 
**   https://josm.openstreetmap.de/wiki/CreateBuild
** 
** 
-->
<project name="josm" default="dist" basedir=".">
	<property name="test.dir" value="test" />
	<property name="src.dir" value="src" />
	<property name="build.dir" value="build"/>
	<!-- build parameter: compression level (ant -Dclevel=N)
             N ranges from 0 (no compression) to 9 (maximum compression)
             default: 9 -->
	<condition property="clevel" value="${clevel}" else="9">
		<isset property="clevel" />
	</condition>

	<!-- Java classpath addition (all jar files to compile tests with this) -->
	<path id="classpath">
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>


	<!--
	  ** Used by Eclipse ant builder for updating 
	  ** the REVISION file used by JOSM
	-->
	<target name="create-revision-eclipse">
		<property name="revision.dir" value="bin"/>
		<antcall target="create-revision" />
	</target>

	<!--
	  ** Creates the REVISION file to be included in the distribution
	  -->
	<target name="create-revision">
		<property name="revision.dir" value="${build.dir}"/>
		<exec append="false" output="REVISION.XML" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C"/>
			<arg value="info"/>
			<arg value="--xml"/>
			<arg value="."/>
		</exec>
		<xmlproperty file="REVISION.XML" prefix="version" keepRoot="false" collapseAttributes="true"/>
		<delete file="REVISION.XML" />
		<tstamp>
			<format property="build.tstamp" pattern="yyyy-MM-dd HH:mm:ss"/>
		</tstamp>

		<property name="version.entry.commit.revision" value="UNKNOWN"/>
		<mkdir dir="${revision.dir}" />
		<echo file="${revision.dir}/REVISION">
# automatically generated by JOSM build.xml - do not edit 			
Revision: ${version.entry.commit.revision}
Is-Local-Build: true
Build-Date: ${build.tstamp}		
</echo>
	</target>


	<target name="dist" depends="compile,create-revision">

		<exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C"/>
			<arg value="info"/>
			<arg value="--xml"/>
			<arg value="."/>
		</exec>
		<xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
		<delete file="REVISION"/>
		<property name="version.entry.commit.revision" value="UNKNOWN"/>
		<property name="version.entry.commit.date" value="UNKNOWN"/>
		<echo>Revision ${version.entry.commit.revision}</echo>
		<copy file="CONTRIBUTION" todir="build"/>
		<copy file="README" todir="build"/>
		<copy file="LICENSE" todir="build"/>

		<!-- styles -->
		<copy file="styles/standard/elemstyles.xml" todir="build/styles/standard"/>

		<!-- create josm-custom.jar -->
		<delete file="dist/josm-custom.jar"/>
		<jar destfile="dist/josm-custom.jar" basedir="build" level="${clevel}">
			<!-- add attribute excludes="**/*BZip2*,**/*Bzip2*" to create a non-bzip2 supporting jar -->
			<manifest>
				<attribute name="Main-class" value="JOSM" />
				<attribute name="Main-Version" value="${version.entry.commit.revision} SVN"/>
				<attribute name="Main-Date" value="${version.entry.commit.date}"/>
			</manifest>
			<zipfileset dir="presets" prefix="presets" />
			<zipfileset dir="images" prefix="images" />
			<zipfileset dir="data" prefix="data" />

			<!-- All jar files necessary to run only JOSM (no tests) -->
			<zipfileset src="lib/metadata-extractor-2.3.1-nosun.jar" />
			<zipfileset src="lib/commons-codec-1.4.jar" />
			<zipfileset src="lib/signpost-core-1.1.jar" />
		</jar>
	</target>

	<target name="distmac" depends="dist">
		<!-- modify MacOS X Info.plist file to hold the SVN version number -->
		<copy file="macosx/JOSM.app/Contents/Info.plist" todir="build"/>
		<replace file="build/Info.plist" token="@SVNVersion@" value="${version.entry.commit.revision}"/>
		<!-- create ZIP file with MacOS X application bundle -->
		<zip destfile="dist/josm-custom-macosx.zip" update="true">
			<zipfileset dir="build" includes="CONTRIBUTION README LICENSE"/>
			<zipfileset dir="macosx" includes="JOSM.app/Contents JOSM.app/Contents/MacOS JOSM.app/Contents/Resources JOSM.app/Contents/Resources/Java JOSM.app/Contents/PkgInfo JOSM.app/Contents/Resources/JOSM.icns"/>
			<zipfileset dir="build" includes="Info.plist" prefix="JOSM.app/Contents"/>
			<zipfileset dir="dist" includes="josm-custom.jar" prefix="JOSM.app/Contents/Resources/Java"/>
			<zipfileset dir="macosx" includes="JOSM.app/Contents/MacOS/JOSM" filemode="755"/>
		</zip>
	</target>

	<target name="compile" depends="init">
		<javac srcdir="src" classpathref="classpath" destdir="build"
				target="1.5" source="1.5" debug="on" encoding="UTF-8">
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
	</target>

	<target name="init">
		<mkdir dir="build" />
		<mkdir dir="dist" />
	</target>

	<target name="clean">
		<delete dir="build" />
		<delete dir="dist" />
	</target>

	<path id="test.classpath">
		<fileset dir="${test.dir}/lib">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="test-init">
		<mkdir dir="${test.dir}/${build.dir}" />
		<mkdir dir="${test.dir}/report" />
	</target>

	<target name="test-clean">
		<delete dir="${test.dir}/${build.dir}"/>
		<delete dir="${test.dir}/report"/>
	</target>

	<target name="test-compile" depends="test-init">
		<javac srcdir="${src.dir}:${test.dir}/unit" classpathref="test.classpath" destdir="${test.dir}/${build.dir}"
				target="1.5" source="1.5" debug="on" encoding="UTF-8">
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
		<javac srcdir="${src.dir}:${test.dir}/functional" classpathref="test.classpath" destdir="${test.dir}/${build.dir}"
						target="1.5" source="1.5" debug="on" encoding="UTF-8">
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
	</target>

	<target name="test" depends="test-compile">
		<junit printsummary="yes">
			<sysproperty key="josm.home" value="${test.dir}/config/unit-josm.home"/>
			<classpath>
				<path refid="test.classpath"/>
				<pathelement path="${test.dir}/${build.dir}"/>
				<pathelement path="${test.dir}/config"/>
			</classpath>
			<formatter type="plain"/>
			<batchtest fork="no" todir="${test.dir}/report">
				<fileset dir="${test.dir}/unit" includes="**/*.java"/>
			</batchtest>
		</junit>
	</target>

</project>
