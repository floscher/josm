Only in kitfox/svg: animation
Only in kitfox/svg/app/ant: SVGToImageAntTask.java
Only in kitfox/svg/app/beans: ProportionalLayoutPanel.form
Only in kitfox/svg/app/beans: ProportionalLayoutPanel.java
Only in kitfox/svg/app/beans: SVGPanel.form
Only in kitfox/svg/app/beans: SVGPanel.java
Only in kitfox/svg/app/data: HandlerFactory.java
Only in kitfox/svg/app: MainFrame.form
Only in kitfox/svg/app: MainFrame.java
Only in kitfox/svg/app: PlayerDialog.form
Only in kitfox/svg/app: PlayerDialog.java
Only in kitfox/svg/app: PlayerThread.java
Only in kitfox/svg/app: PlayerThreadListener.java
Only in kitfox/svg/app: SVGPlayer.form
Only in kitfox/svg/app: SVGPlayer.java
Only in kitfox/svg/app: SVGViewer.form
Only in kitfox/svg/app: SVGViewer.java
Only in kitfox/svg/app: VersionDialog.form
Only in kitfox/svg/app: VersionDialog.java
Only in kitfox/svg: SVGDisplayPanel.form
Only in kitfox/svg: SVGDisplayPanel.java
diff -ur kitfox/svg/SVGElement.java src/com/kitfox/svg/SVGElement.java
--- kitfox/svg/SVGElement.java	2015-02-18 15:16:19.968664918 +0100
+++ src/com/kitfox/svg/SVGElement.java	2015-02-18 15:25:38.763435836 +0100
@@ -35,9 +35,6 @@
  */
 package com.kitfox.svg;
 
-import com.kitfox.svg.animation.AnimationElement;
-import com.kitfox.svg.animation.TrackBase;
-import com.kitfox.svg.animation.TrackManager;
 import com.kitfox.svg.pathcmd.Arc;
 import com.kitfox.svg.pathcmd.BuildHistory;
 import com.kitfox.svg.pathcmd.Cubic;
@@ -122,10 +119,6 @@
      * The diagram this element belongs to
      */
     protected SVGDiagram diagram;
-    /**
-     * Link to the universe we reside in
-     */
-    protected final TrackManager trackManager = new TrackManager();
     boolean dirty = true;
 
     /**
@@ -305,65 +298,6 @@
         }
     }
 
-    public void removeAttribute(String name, int attribType)
-    {
-        switch (attribType)
-        {
-            case AnimationElement.AT_CSS:
-                inlineStyles.remove(name);
-                return;
-            case AnimationElement.AT_XML:
-                presAttribs.remove(name);
-                return;
-        }
-    }
-
-    public void addAttribute(String name, int attribType, String value) throws SVGElementException
-    {
-        if (hasAttribute(name, attribType))
-        {
-            throw new SVGElementException(this, "Attribute " + name + "(" + AnimationElement.animationElementToString(attribType) + ") already exists");
-        }
-
-        //Alter layout for id attribute
-        if ("id".equals(name))
-        {
-            if (diagram != null)
-            {
-                diagram.removeElement(id);
-                diagram.setElement(value, this);
-            }
-            this.id = value;
-        }
-
-        switch (attribType)
-        {
-            case AnimationElement.AT_CSS:
-                inlineStyles.put(name, new StyleAttribute(name, value));
-                return;
-            case AnimationElement.AT_XML:
-                presAttribs.put(name, new StyleAttribute(name, value));
-                return;
-        }
-
-        throw new SVGElementException(this, "Invalid attribute type " + attribType);
-    }
-
-    public boolean hasAttribute(String name, int attribType) throws SVGElementException
-    {
-        switch (attribType)
-        {
-            case AnimationElement.AT_CSS:
-                return inlineStyles.containsKey(name);
-            case AnimationElement.AT_XML:
-                return presAttribs.containsKey(name);
-            case AnimationElement.AT_AUTO:
-                return inlineStyles.containsKey(name) || presAttribs.containsKey(name);
-        }
-
-        throw new SVGElementException(this, "Invalid attribute type " + attribType);
-    }
-
     /**
      * @return a set of Strings that corespond to CSS attributes on this element
      */
@@ -389,12 +323,6 @@
         children.add(child);
         child.parent = this;
         child.setDiagram(diagram);
-
-        //Add info to track if we've scanned animation element
-        if (child instanceof AnimationElement)
-        {
-            trackManager.addTrackElement((AnimationElement) child);
-        }
     }
 
     protected void setDiagram(SVGDiagram diagram)
@@ -529,61 +457,6 @@
         return getStyle(attrib, true);
     }
 
-    public void setAttribute(String name, int attribType, String value) throws SVGElementException
-    {
-        StyleAttribute styAttr;
-
-
-        switch (attribType)
-        {
-            case AnimationElement.AT_CSS:
-            {
-                styAttr = (StyleAttribute) inlineStyles.get(name);
-                break;
-            }
-            case AnimationElement.AT_XML:
-            {
-                styAttr = (StyleAttribute) presAttribs.get(name);
-                break;
-            }
-            case AnimationElement.AT_AUTO:
-            {
-                styAttr = (StyleAttribute) inlineStyles.get(name);
-
-                if (styAttr == null)
-                {
-                    styAttr = (StyleAttribute) presAttribs.get(name);
-                }
-                break;
-            }
-            default:
-                throw new SVGElementException(this, "Invalid attribute type " + attribType);
-        }
-
-        if (styAttr == null)
-        {
-            throw new SVGElementException(this, "Could not find attribute " + name + "(" + AnimationElement.animationElementToString(attribType) + ").  Make sure to create attribute before setting it.");
-        }
-
-        //Alter layout for relevant attributes
-        if ("id".equals(styAttr.getName()))
-        {
-            if (diagram != null)
-            {
-                diagram.removeElement(this.id);
-                diagram.setElement(value, this);
-            }
-            this.id = value;
-        }
-
-        styAttr.setStringValue(value);
-    }
-
-    public boolean getStyle(StyleAttribute attrib, boolean recursive) throws SVGException
-    {
-        return getStyle(attrib, recursive, true);
-    }
-    
     /**
      * Copies the current style into the passed style attribute. Checks for
      * inline styles first, then internal and extranal style sheets, and finally
@@ -595,8 +468,7 @@
      * style attribute, checks attributes of parents back to root until one
      * found.
      */
-    public boolean getStyle(StyleAttribute attrib, boolean recursive, boolean evalAnimation)
-            throws SVGException
+    public boolean getStyle(StyleAttribute attrib, boolean recursive) throws SVGException
     {
         String styName = attrib.getName();
 
@@ -605,17 +477,6 @@
 
         attrib.setStringValue(styAttr == null ? "" : styAttr.getStringValue());
 
-        //Evalutate coresponding track, if one exists
-        if (evalAnimation)
-        {
-            TrackBase track = trackManager.getTrack(styName, AnimationElement.AT_CSS);
-            if (track != null)
-            {
-                track.getValue(attrib, diagram.getUniverse().getCurTime());
-                return true;
-            }
-        }
-
         //Return if we've found a non animated style
         if (styAttr != null)
         {
@@ -628,17 +489,6 @@
 
         attrib.setStringValue(presAttr == null ? "" : presAttr.getStringValue());
 
-        //Evalutate coresponding track, if one exists
-        if (evalAnimation)
-        {
-            TrackBase track = trackManager.getTrack(styName, AnimationElement.AT_XML);
-            if (track != null)
-            {
-                track.getValue(attrib, diagram.getUniverse().getCurTime());
-                return true;
-            }
-        }
-
         //Return if we've found a presentation attribute instead
         if (presAttr != null)
         {
@@ -700,14 +550,6 @@
         //Copy presentation value directly
         attrib.setStringValue(presAttr == null ? "" : presAttr.getStringValue());
 
-        //Evalutate coresponding track, if one exists
-        TrackBase track = trackManager.getTrack(presName, AnimationElement.AT_XML);
-        if (track != null)
-        {
-            track.getValue(attrib, diagram.getUniverse().getCurTime());
-            return true;
-        }
-
         //Return if we found presentation attribute
         if (presAttr != null)
         {
diff -ur kitfox/svg/SVGLoaderHelper.java src/com/kitfox/svg/SVGLoaderHelper.java
--- kitfox/svg/SVGLoaderHelper.java	2015-02-18 15:16:20.160665871 +0100
+++ src/com/kitfox/svg/SVGLoaderHelper.java	2015-02-18 15:25:38.763435836 +0100
@@ -37,9 +37,6 @@
 package com.kitfox.svg;
 
 import java.net.*;
-import java.io.*;
-
-import com.kitfox.svg.animation.parser.*;
 
 /**
  * @author Mark McKay
@@ -58,11 +55,6 @@
     public final SVGDiagram diagram;
 
     public final URI xmlBase;
-
-    /**
-     * Animate nodes use this to parse their time strings
-     */
-    public final AnimTimeParser animTimeParser = new AnimTimeParser(new StringReader(""));
     
     /** Creates a new instance of SVGLoaderHelper */
     public SVGLoaderHelper(URI xmlBase, SVGUniverse universe, SVGDiagram diagram)
diff -ur kitfox/svg/SVGLoader.java src/com/kitfox/svg/SVGLoader.java
--- kitfox/svg/SVGLoader.java	2015-02-18 15:16:20.188666018 +0100
+++ src/com/kitfox/svg/SVGLoader.java	2015-02-18 15:25:38.763435836 +0100
@@ -42,7 +42,6 @@
 import org.xml.sax.*;
 import org.xml.sax.helpers.DefaultHandler;
 
-import com.kitfox.svg.animation.*;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -88,10 +87,6 @@
 
         //Compile a list of important builder classes
         nodeClasses.put("a", A.class);
-        nodeClasses.put("animate", Animate.class);
-        nodeClasses.put("animatecolor", AnimateColor.class);
-        nodeClasses.put("animatemotion", AnimateMotion.class);
-        nodeClasses.put("animatetransform", AnimateTransform.class);
         nodeClasses.put("circle", Circle.class);
         nodeClasses.put("clippath", ClipPath.class);
         nodeClasses.put("defs", Defs.class);
@@ -115,7 +110,6 @@
         nodeClasses.put("polyline", Polyline.class);
         nodeClasses.put("radialgradient", RadialGradient.class);
         nodeClasses.put("rect", Rect.class);
-        nodeClasses.put("set", SetSmil.class);
         nodeClasses.put("shape", ShapeElement.class);
         nodeClasses.put("stop", Stop.class);
         nodeClasses.put("style", Style.class);
